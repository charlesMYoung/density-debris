---
import { getCollection } from "astro:content";
import Layout from "~/layouts/Layout.astro";
import dayjs from "dayjs";
import { Comment } from "~/components/Comment";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries
    .filter((post) => !post.data.isDraft)
    .map((entry) => ({
      params: { slug: entry.slug },
      props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// 计算阅读时间
const words = entry.body.split(" ").length;
const minutes = Math.ceil(words / 200);
---

<script>
  const observer = new MutationObserver(addPreCopyButton);
  observer.observe(document.body, { childList: true, subtree: true });

  document.addEventListener("DOMContentLoaded", addPreCopyButton);

  function addPreCopyButton() {
    observer.disconnect();

    let codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (let codeBlock of codeBlocks) {
      if (
          codeBlock.parentElement?.nodeName === "DIV" &&
          codeBlock.parentElement?.classList.contains("code-block")
      )
        continue;

      let wrapper = document.createElement("div");
      wrapper.className = "relative code-block";

      let copyButton = document.createElement("button");
      copyButton.className =
          "text-on-background hover:text-primary bg-surface absolute top-0 right-0 text-sm px-3" +
          " py-2 rounded-bl-lg rounded-tr-lg opacity-75" +
          " hover:opacity-100 transition-all duration-200 ease-in-out";
      copyButton.textContent = "拷贝";

      codeBlock.setAttribute("tabindex", "0");
      if (codeBlock.parentNode) {
        codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      }

      wrapper.appendChild(codeBlock);
      wrapper.appendChild(copyButton);

      copyButton.addEventListener("click", async () => {
        let text = codeBlock?.querySelector("code")?.innerText as string;

        await navigator.clipboard.writeText(text);

        copyButton.textContent = "已拷贝";
        copyButton.classList.toggle("opacity-100");

        setTimeout(() => {
          copyButton.textContent = "拷贝";
          copyButton.classList.toggle("opacity-100");
        }, 700);
      });
    }

    observer.observe(document.body, { childList: true, subtree: true });
  }

</script>

<Layout title={entry.data.title}>
  <h1>{entry.data.title}</h1>
  <p class="text-secondary">
    {dayjs(entry.data.pubDate).format("MM-DD")}. 阅读{minutes} 分钟
  </p>
  <Content />
  {entry.data.isComment && <Comment client:only theme={"light"} />}
</Layout>
