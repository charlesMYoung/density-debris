---
import Layout from "../layouts/Layout.astro";
---

<script>
  const el = document.getElementById("demo") as HTMLCanvasElement;
  const ctx = el!.getContext("2d");

  interface Point {
    x: number;
    y: number;
  }

  interface Branch {
    start: Point;
    length: number;
    theta: number;
  }

  function init() {
    //#88888825
    ctx.strokeStyle = "#88888825";

    step({
      start: { x: 0, y: 0 },
      length: 10,
      theta: Math.PI / 4,
    });

    step({
      start: { x: 2000, y: 0 },
      length: 5,
      theta: Math.PI / 2,
    });
  }

  let pendingTasks: Function[] = [];

  function step(b: Branch, depth = 0) {
    const end = getEndPoint(b);
    drawBranch(b);

    if (depth < 4 || Math.random() < 0.5) {
      pendingTasks.push(() =>
        step(
          {
            start: end,
            length: b.length + (Math.random() * 2 - 1),
            theta: b.theta - 0.2 * Math.random(),
          },
          depth + 1
        )
      );
    }
    if (depth < 4 || Math.random() < 0.5) {
      pendingTasks.push(() =>
        step(
          {
            start: end,
            length: b.length + (Math.random() * 2 - 1),
            theta: b.theta + 0.2 * Math.random(),
          },
          depth + 1
        )
      );
    }
  }

  function frame() {
    const tasks: Function[] = [];
    pendingTasks = pendingTasks.filter((i) => {
      if (Math.random() > 0.4) {
        tasks.push(i);
        return false;
      }
      return true;
    });
    tasks.forEach((fn) => fn());
  }

  let framesCount = 0;
  function startFrame() {
    requestAnimationFrame(() => {
      framesCount += 1;
      if (framesCount % 3 === 0) frame();
      startFrame();
    });
  }

  startFrame();

  function lineTo(p1: Point, p2: Point) {
    ctx.beginPath();
    ctx.moveTo(p1.x, p1.y);
    ctx.lineTo(p2.x, p2.y);
    ctx.stroke();
  }

  function getEndPoint(b: Branch): Point {
    return {
      x: b.start.x + b.length * Math.cos(b.theta),
      y: b.start.y + b.length * Math.sin(b.theta),
    };
  }

  function drawBranch(b: Branch) {
    lineTo(b.start, getEndPoint(b));
  }

  init();
</script>

<Layout title="Welcome to Astro.">
  <main class="bg-black">
    <canvas
      id="demo"
      width="2000"
      height="2000"
      scale-50
      origin-top-left
      width="100%"
      height="100%"
      style="max-width: 100%; max-height: 100%;"></canvas>
  </main>
</Layout>
